//'use strict'
// version 28.08.2021 - v2 - release
var jsonHtml = null;
var is_process = 0;
var is_mobile =
  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
    navigator.userAgent
  );
let current_frame = "login";
window.tfp_widget_open = false;

var widgestPosition = {
  setPosition: (json) => {
    jsonHtml = json;
    try {
      if (json["widget-title"]) {
        if (json["widget-title"].header) {
          $(".textComercial").html(jsonHtml["widget-title"]["header"]);
          $(".textComercialSlog").css("fontSize", "10px");
          $(".CaiAppHeader-title").css("fontSize", "17px");
          $(".CaiAppHeader-title").css("lineHeight", "17px");
          $(".CaiAppHeader").css("padding", "13px");
        }
      }
    } catch (e) {}
    const applyStyles = (kind, childKinds) => {
      Object.keys(childKinds).map((childKind) => {
        $(`.${kind}`).css(String(childKind), childKinds[childKind]);
        //document.querySelector(`.${kind}`).style[childKind] =
        //childKinds[childKind];
      });
    };
    Object.keys(json).map((kind) => {
      return applyStyles(kind, json[kind]);
    });
  },

  AplyCss: () => {
    if (is_mobile) {
      document.querySelector(".widget-block").style.width = "100%";
      document.querySelector(".widget-block").style.right = "0px";
      document.querySelector(".widget-block").style.bottom = "0px";
      document.querySelector(".privacy-policy-padding").style.paddingBottom =
        "5px";
      document.querySelector("#regEmail").style.marginBottom = "25px";
      document.querySelector(".video-code-button-text").style.fontSize = "18px";
      document.querySelector(".video-code-button-text").style.paddingRight =
        "7px";
      document
        .querySelector("#fullscreen-block")
        .classList.add("translate-widget-d-none");
      document
        .querySelector(".mobileRollUp")
        .classList.remove("translate-widget-d-none");
      document
        .querySelector(".close-mobileWidget")
        .classList.remove("translate-widget-d-none");
      document.querySelector("#widget-tooltip").onclick = function () {
        document
          .querySelector("#widget-tooltip")
          .classList.add("translate-widget-d-none");
        document
          .querySelector("#widget-close")
          .classList.add("translate-widget-d-none");
      };
      document.querySelector("#widget-tooltip").onclick = function () {
        document
          .querySelector("#widget-tooltip")
          .classList.add("translate-widget-d-none");
        document
          .querySelector("#widget-close")
          .classList.add("translate-widget-d-none");
      };
    }
    if (jsonHtml) {
      const applyStyles = (kind, childKinds) => {
        Object.keys(childKinds).map((childKind) => {
          $(`.${kind}`).css(String(childKind), childKinds[childKind]);
          //document.querySelector(`.${kind}`).style[childKind] =
          //childKinds[childKind];
        });
      };
      Object.keys(jsonHtml).map((kind) => {
        return applyStyles(kind, jsonHtml[kind]);
      });
    }
  },
};
(function () {
  // Localize jQuery variable
  var streaming = false;
  var is_release = 1;
  var jQuery;
  //------ Me Var
  var mainViewCreated = false; //открыт чат или нет
  var defaults = {
    bottom: 50,
    right: 50,
    fullScreen: false,
    canToggleMic: false,
    zIndex: 0,
    buttonVisible: true,
  };

  var is_commercial = 1;
  var allow_upload = 1;

  var session, publisher, subscriber;
  var userToken;
  var isFullScreen = false;
  var codeCapchaKey = "";
  var session_id = "";
  var countCapchaErr = 0;

  var config = Object.assign({}, defaults);
  var apiKey = "";
  var domain = "";
  var domainApi = "https://api.tdl.com.ua";
  if (is_release) {
    domain = "https://api.tdl.com.ua/"; //!!! Slash NEED
    domainApi = "https://api.tdl.com.ua"; //!!! NO Slash
  } else {
    domain = "https://stage.api.tdl.com.ua/"; //!!! Slash NEED
    domainApi = "https://stage.api.tdl.com.ua"; //!!! NO Slash
  }

  var domainPath = "widget-ua";

  var selfHolder = null;
  var interpreterHolder = null;
  //----- Call
  var ids = {
    selfHolder: "self-holder",
    interpreterHolder: "interpreter-holder",
  };

  // Application skeleton
  var Application = {
    Class: {
      Model: {},
      Collection: {},
      View: {},
    },
    View: {},
  };

  var widgestCall = {
    Class: {
      Model: {},
      Collection: {},
      View: {},
    },
    View: {},
  };
  var regFio = "";
  var regPhone = "";
  var regEmail = "";
  var userToken = "";
  Application.Start = function () {
    //console.log(widgestCall);
    var params_js = getSyncScriptParams();

    if (typeof params_js.api_key === "undefined") {
      console.error("Api key missing");
      return;
    }
    if (!params_js.api_key && !apiKey) {
      console.error("Api key missing");
      return;
    } else {
      apiKey = params_js.api_key;
    }

    if (params_js.is_commercial) {
      is_commercial = parseInt(params_js.is_commercial);
    }
    if (params_js.attach) {
      allow_upload = parseInt(params_js.attach);
      console.log("upload-allow");
    }
    console.log(apiKey);
  };
  //--- Design

  //---- STEP 1 --- Capcha
  Application.View.Capcha = function () {
    mainViewCreated = true;
  };
  Application.View.CapchaPlayVideo = function (video) {
    document.querySelector("#myVideoPlay").innerHTML =
      '<video muted muted autoplay loop id="myVideo" playsinline ><source src="' +
      video +
      '" type="video/mp4" playsinline></video>';
    document
      .querySelector("#myVideo")
      .classList.remove("translate-widget-d-none");
    document.querySelector("#myVideo").click(function () {
      this.paused ? this.play() : this.pause();
    });
  };

  //------ Посылает текст в чат
  //@todo не используется удалить
  Application.Chat_SentMessage = function (message) {
    if (!session_id) {
      console.err(" Application.Chat.SentMessage:empty session_id");
      return;
    }

    jQuery.ajax({
      type: "POST",
      url: domainApi + "/api/partner/send_message",
      headers: { "X-Interpreter-Region": "ua" },
      data: { session_id: session_id },
      dataType: "json",
      success: function (response) {
        if (response.success) {
          jQuery("#chatAns").fadeIn(1000);
          document.querySelector("#chatAns").classList.remove("MsgError");
          document.querySelector("#chatAns").classList.add("MsgSucces");
          document.querySelector("#chatAns").innerHTML =
            "Повідомлення успішно відправлено!";
          jQuery("#chatAns").fadeOut(1000);
        } else {
          if (response.message) {
            jQuery("#chatAns").fadeIn(1000);
            document.querySelector("#chatAns").classList.remove("MsgSucces");
            document.querySelector("#chatAns").classList.add("MsgError");
            document.querySelector("#chatAns").innerHTML = response.message;
            jQuery("#chatAns").fadeOut(1000);
          }
        }
      },
      error: function (xhr, status, errorThrown) {
        Application.errorHandler({ code: "4", name: "Failed send server" });
        jQuery("#chatAns").fadeIn(1000);
        document.querySelector("#chatAns").classList.remove("MsgSucces");
        document.querySelector("#chatAns").classList.add("MsgError");
        document.querySelector("#chatAns").innerHTML =
          "Помилка відправки серверу ";
        jQuery("#chatAns").fadeOut(1000);
      },
    });
  };

  Application.getCapcha = function () {
    countCapchaErr = 0;
    if (!is_release) {
      tsmode = { test_mode: 1 };
    } else {
      tsmode = [];
    }
    document.querySelector("#s_code").value = "";
    jQuery("#video-code-button").attr("disabled", true);
    document.querySelector("#video-code-button").classList.add("op3");

    jQuery.ajax({
      type: "POST",
      url: domainApi + "/api/widget/captcha",
      headers: { "X-Interpreter-Region": "ua" },
      data: tsmode,
      dataType: "json",
      success: function (response) {
        Application.View.CapchaPlayVideo(response.video);
        codeCapchaKey = response.key;

        if (response.code) {
          document.querySelector("#s_code").value = response.code; //IT TEST
        }
      },
      error: function (xhr, status, errorThrown) {
        console.error("Failed to auth user" + xhr.responseText);
      },
    });
  };

  Application.View.CallShow = function () {
    current_frame = "call";
    jQuery("#myVideo").addClass("translate-widget-d-none");
    jQuery("#widget-text").addClass("translate-widget-d-none");
    jQuery(".widget-input").addClass("translate-widget-d-none");
    jQuery(".CaiSendButtonContainer").addClass("translate-widget-d-none");
    jQuery(".CaiAppLive--message-container").addClass("conference");
    jQuery("#web-Chat").removeClass("translate-widget-d-none");
    jQuery(".CaiAppLive--message-container").addClass("pb-10");
    jQuery("#full-screen").removeClass("translate-widget-d-none");
    if (config.canToggleMic) {
      //отключить микрофон @todo
    }
    if (config.fullScreen) {
      //Показать на полный екран @todo
    }
  };
  Application.View.CapchaFail = function () {
    document.querySelector("#s_code").style.borderColor = "#f44336";
  };
  Application.View.CapchaOK = function () {
    document.querySelector("#s_code").style.borderColor = "green";
  };
  Application.View.CapchaChek = function (enterCode) {
    var phone = "";
    var name = "";
    var email = "";
    if (regPhone) {
      phone = regPhone;
    }
    if (regFio) {
      name = regFio;
    }
    if (regEmail) {
      email = regEmail;
    }
    document.querySelector(".widget-text-error").innerHTML = "";
    var sendInfo = {
      phone: phone,
      name: name,
      email: email,
      key: codeCapchaKey,
      code: enterCode,
    };
    jQuery.ajax({
      type: "POST",
      url: domainApi + "/api/widget/auth",
      headers: { "X-Interpreter-Region": "ua" },
      data: sendInfo,
      dataType: "json",
      success: function (response) {
        console.log(response);

        if (!response) {
          Application.View.CapchaFail();
          console.error("Failed to auth user");
        }
        if (!response.success) {
          countCapchaErr = countCapchaErr + 1;
          Application.View.CapchaFail();
          document.querySelector(".widget-text-error").innerHTML =
            response.message;
          console.error("Wrong code entered");
          if (response.code == "404") {
            console.error("Wrong code entered");
            document.querySelector(".widget-text-error").innerHTML =
              "Емейл прив`язаний до іншого номеру ";
          }
        }
        if (response.success) {
          countCapchaErr = 0;
          userToken = response.token;
          Application.View.CapchaOK();
          Application.initCall();
        }
      },
      error: function (xhr, status, errorThrown) {
        Application.errorHandler({ code: 2, name: "Failed to auth user" });
        document.querySelector(".widget-text-error").innerHTML =
          "Проблеми з сервером";
        document.querySelector("#s_code").value = "";
        Application.getCapcha();
        Application.View.CapchaFail();
      },
      complete: function () {
        if (countCapchaErr > 0) {
          document.querySelector("#s_code").value = "";
          Application.getCapcha();
        }
      },
    });
  };

  //--- Шаг 3 Перезвонить
  Application.View.Finish = function () {
    Application.endCall();
    Application.View.FullScreen(0);
  };

  //---- end STEP 1 --- Capcha
  Application.Registred = function () {
    regFio = document.querySelector("#regFIO").value;
    regPhone = document.querySelector("#regTELEPHONE").value;
    regEmail = document.querySelector("#regEmail").value;
    Application.getCapcha();
  };
  //=== Call Function begin
  Application.endCall = function () {
    current_frame = "end-call";
    if (publisher) {
      publisher.destroy();
    }
    if (session && subscriber) {
      session.unsubscribe(subscriber);
    }
    if (session) {
      session.disconnect();
    }
  };

  Application.errorHandler = function (err) {
    if (!err) {
      return;
    }
    var msgErr = "";
    if (err.name) {
      switch (err.name) {
        case "T_USER_MEDIA_ACCESS_DENIED":
          msgErr = "Доступ заборонений до ваших відео пристроїв";
          break;
        case "OT_USER_MEDIA_ACCESS_DENIED":
          msgErr = "Доступ заборонений до ваших відео пристроїв";
          break;
        case "OT_HARDWARE_UNAVAILABLE":
          msgErr = "Доступ заборонений до ваших відео пристроїв";
          break;
        case "OT_UNEXPECTED_SERVER_RESPONSE":
          msgErr = "";
          break;
        case "OT_HARDWARE_UNAVAILABLE":
          msgErr = "Доступ заборонений до ваших відео пристроїв";
          break;

        default:
          msgErr = err.name;
          break;
      }
    }

    if (msgErr) {
      document.querySelector("#errorVideo").innerHTML = msgErr;
      document.querySelector("#errorVideo").style.display = "";

      document.querySelector("#msgWait").style.display = "none";
      document.querySelector("#msgWaitErr").innerHTML = msgErr;
      document.querySelector("#msgWaitErr").style.display = "";
    }
    console.log("error code" + err.code);
    console.log("error code" + err["name"]);
    console.log(err);
  };

  Application.View.Connect = function (response) {
    selfHolder = document.getElementById(ids.selfHolder);
    interpreterHolder = document.getElementById(ids.interpreterHolder);

    if (selfHolder === null) {
      console.error("View not found:selfHolder");
      return;
    }
    if (interpreterHolder === null) {
      console.error("View not found:interpreterHolder");
      return;
    }
    session_id = response.session_id;
    document.querySelector("#wg_session_id").value = session_id;

    session = OT.initSession(response.api_key, response.session_id);

    var audioInputDevices;
    var videoInputDevices;
    OT.getDevices(function (error, devices) {
      audioInputDevices = devices.filter(function (element) {
        return element.kind == "audioInput";
      });
      videoInputDevices = devices.filter(function (element) {
        return element.kind == "videoInput";
      });
      for (var i = 0; i < audioInputDevices.length; i++) {
        console.log("audio input device: ", audioInputDevices[i].deviceId);
      }
      for (i = 0; i < videoInputDevices.length; i++) {
        console.log("video input device: ", videoInputDevices[i].deviceId);
      }
    });
    publisher = OT.initPublisher(
      selfHolder,
      {
        insertMode: "after",
        width: "100%",
        height: "100%",
        publishAudio: true,
        showControls: true,
        usePreviousDeviceSelection: true,
      },
      Application.errorHandler
    );
    if (publisher) {
      console.log("Publisher initialized.");
      jQuery("#test-minWEB .OT_video-loading").hide();
    }
    //------ Запрос на доступ к видео
    publisher.on({
      accessAllowed: function () {
        console.log("supper connect. Wait operator");
        // The user has granted access to the camera and mic.
      },
      accessDialogOpened: function () {
        console.log("accessDialogOpened");
      },
      accessDialogClosed: function accessDeniedHandler() {
        console.log("accessDialogClosed");
      },
    });

    session.connect(response.token, function (error) {
      console.log("session.connect");
      if (error) {
        Application.View.Disconnect();
        Application.errorHandler(error);
      } else {
        session.publish(publisher, Application.errorCallHandler);
      }
    });
    session.on("streamCreated", function (event) {
      console.log("session.streamCreated");
      subscriber = session.subscribe(
        event.stream,
        interpreterHolder,
        {
          insertMode: "replace",
          width: "100%",
          height: "100%",
          showControls: false,
        },
        Application.errorHandler
      );
      console.log("operator connett");
      Application.AfterOperator();
    });
    session.on("sessionDisconnected", function () {
      if (subscriber) {
        console.log("sessionDisconnected");
        Application.View.Disconnect();
      } else {
      }
    });
    session.on("connectionDestroyed", function () {
      if (session) {
        Application.View.Disconnect();
      }
    });
    session.on("streamDestroyed", function () {
      if (session) {
        Application.View.Disconnect();
      }
    });
  };
  Application.errorCallHandler = function (err) {
    if (!err) {
      return;
    }
    Application.View.Disconnect();
    console.log("call error");
    console.error(err);
  };

  //-------- Переключить на Шаг 3 последнее окно
  Application.View.Disconnect = function () {
    Application.endCall();
    Application.BeforeOperator();
    jQuery("#webchat-screen").addClass("translate-widget-d-none");
    jQuery("#last-screen").removeClass("translate-widget-d-none");
    jQuery("#widgetOperatorPlace").html(
      '<div id="interpreter-holder" class="interpreterHolder pt-100" style="width:100%;min-height: 200px; overflow: hidden;position: relative;top:0px" >\n' +
        '                                <div    class="OT_mirrored OT_root OT_publisher OT_loading OT_fit-mode-cover OT_micro OT_mini translatorWebcam" style="min-height: 200px;  overflow: hidden;">\n' +
        '                                    <div class="OT_bar OT_edge-bar-item OT_mode-auto"></div>\n' +
        '                                    <h1 class="OT_name OT_edge-bar-item OT_mode-off"></h1>\n' +
        '                                    <h1 class="OT_archiving OT_edge-bar-item OT_edge-bottom OT_archiving-off OT_mode-off">\n' +
        '                                        <div class="OT_archiving-light-box">\n' +
        '                                            <div class="OT_archiving-light"></div>\n' +
        "                                        </div>\n" +
        '                                        <div class="OT_archiving-status OT_mode-on OT_edge-bar-item OT_edge-bottom"></div>\n' +
        "                                    </h1>\n" +
        '                                    <div class="OT_audio-level-meter OT_hide-forced">\n' +
        '                                        <div class="OT_audio-level-meter__audio-only-img"></div>\n' +
        '                                        <div class="OT_audio-level-meter__value"></div>\n' +
        "                                    </div>\n" +
        "                                </div>\n" +
        "                            </div>"
    );
    jQuery("#interpreter-holder").css("top", "0px");
    jQuery("#test-minWEB .OT_video-loading").hide();
    jQuery("#interpreter-holder .OT_video-loading").show();
  };
  Application.BeforeOperator = function () {
    Application.View.FullScreen(0);
    jQuery("#interpreter-holder").hide();
    jQuery("#test-minWEB").hide();
    jQuery("#webchat-btnImg").hide();
    jQuery("#webChat-btnText").html("Відмінити");
    document.querySelector("#webChat-btnText").style.paddingRight = "0px";
    jQuery(".full-screen-button").hide();
    jQuery(".text-webChat").hide();
    jQuery("#telegButton").hide();
    jQuery(".full-screen-button").hide();
    jQuery(".OT_archiving-light-box").hide();
    jQuery(".text-when-loading").show();
    jQuery("#msgSent-downloadForm").hide();
    jQuery(".widget-operatorRollUp").hide();
  };

  Application.AfterOperator = function () {
    Application.View.FullScreen(0);
    jQuery("#test-minWEB").show();
    jQuery("#interpreter-holder").show();
    jQuery("#webchat-btnImg").show();
    jQuery("#webChat-btnText").html("Завершити");
    document.querySelector("#webChat-btnText").style.paddingRight = "49px";
    jQuery(".text-when-loading").hide();
    jQuery(".full-screen-button").show();
    jQuery(".text-webChat").show();
    jQuery("#telegButton").show();
    jQuery("#interpreter-holder .OT_video-loading").hide();
    jQuery("#interpreter-holder").css("object-fit", "cover");
    jQuery("#msgSent-downloadForm").show();
    const mediaQuery = window.matchMedia("(max-width: 430px)");
    if (is_mobile) {
      jQuery("#fullscreen-block").addClass("translate-widget-d-none");
      jQuery("#video-code-button").on("click", () => {
        jQuery("#fullscreen-block").addClass("translate-widget-d-none");
      });
    }
  };

  Application.initCall = function () {
    console.log("INIT CALLL");
    current_frame = "waiting_interpreter";
    document
      .querySelector("#video-code-screen")
      .classList.add("translate-widget-d-none");
    document
      .querySelector("#webchat-screen")
      .classList.remove("translate-widget-d-none");
    document.querySelector("#errorVideo").style.display = "none";

    document.querySelector("#errorVideo").innerHTML = "";
    document.querySelector("#errorVideo").style.display = "none";

    document.querySelector("#msgWait").style.display = "";
    document.querySelector("#msgWaitErr").innerHTML = "";
    document.querySelector("#msgWaitErr").style.display = "none";

    Application.BeforeOperator();

    jQuery.ajax({
      type: "POST",
      url: domainApi + "/api/widget/call",
      headers: { "X-Interpreter-Region": "ua" },
      data: { api_key: apiKey, token: userToken },
      dataType: "json",
      success: function (response) {
        if (!response) {
          Application.errorHandler({
            code: "3",
            name: "Помилка [Failed to init call -404]",
          });
          console.error("Failed to init call");
          Application.View.Disconnect();
          return false;
        }
        if (!response.success) {
          console.error(
            "Wrong code enter Call api_key:" + apiKey + " token=" + userToken
          );
          console.error(
            "Wrong code enter Call api_key:" + apiKey + " token=" + userToken
          );
          Application.errorHandler({
            code: "1",
            name:
              "Помилка [Api Key]" +
              response.message +
              ".Оповістити на :developers@getbewarned.com",
          });
          Application.View.Disconnect();

          return false;
        }
        if (response.success) {
          Application.View.CallShow();
          Application.View.Connect(response);
        }
      },
      error: function (xhr, status, errorThrown) {
        console.error("Failed to auth user");
        Application.errorHandler({
          code: "3",
          name: "Помилка [Failed to init call -404]",
        });
      },
    });
  };
  //=== /- Call Function End

  Application.View.CloseAll = function () {
    window.tfp_widget_open = false;
    Application.endCall(); //disconnect
    session = "";
    session_id = "";
    publisher = "";
    subscriber = "";
    userToken = "";
    current_frame = "login";
    session_id = "";
    document.querySelector("#wg_session_id").value = session_id;
    document.querySelector(".widget-text-error").innerHTML = "";
    document.querySelector("#regFIO").value = "";
    document.querySelector("#regTELEPHONE").value = "";
    document.querySelector("#regEmail").value = "";
    document.querySelector("#wg_message").value = "";
    jQuery("#regButton").attr("disabled", true);
    document.querySelector("#regButton").classList.add("op3");
    //----- desing

    document
      .querySelector("#widget-close")
      .classList.add("translate-widget-d-none");
    document
      .querySelector("#widget-tooltip")
      .classList.remove("translate-widget-d-none");
    document
      .querySelector("#loginScreen")
      .classList.remove("translate-widget-d-none");
    document
      .querySelector("#video-code-screen")
      .classList.add("translate-widget-d-none");
    document
      .querySelector("#webchat-screen")
      .classList.add("translate-widget-d-none");
    document
      .querySelector("#last-screen")
      .classList.add("translate-widget-d-none");
  };

  Application.View.FullScreen = function (open) {
    if (open) {
      isFullScreen = 1;
      jQuery("#msgSent-downloadForm").css("margin-left", "-275px");
      jQuery("#msgSent-downloadForm").css("top", "0");
      jQuery("#msgSent-downloadForm").css("margin-top", "10px");
      jQuery(".chatAns-FS").css("padding-top", "79px");
      jQuery(".widget-input__file-icon-wrapper").css("margin-left", "-10px");
      jQuery(".widget-input__file-icon-wrapper").css("margin-bottom", "5px");
      jQuery(".widget-input__file-button-text").css("margin-left", "-20px");
      jQuery("#interpreter-holder").css("top", "");
      jQuery("#interpreter-holder").css("position", "fixed");
      jQuery("#interpreter-holder").css("left", "190px");
      jQuery("#interpreter-holder").css("width", "calc(100% - 190px * 2)");
      jQuery("#interpreter-holder").css("height", "calc(100% - 83px)");
      jQuery("#telegButton").css("left", "285px");
      jQuery("#interpreter-holder .OT_widget-container").css(
        "background-color",
        "85%"
      );
      jQuery("#wg_upl_fileInfo").css("color", "white");
      if (is_commercial === 1) {
        document.querySelector(".myWebCam").style.paddingTop = "0px";
        jQuery(".text-buttons").addClass("pt-2").removeClass("pt-4");
        document.querySelector(".fs-padding").style.paddingTop = "0px";
      } else {
        document.querySelector(".fs-padding").style.paddingTop = "0px";
        jQuery(".text-buttons").addClass("pt-2").removeClass("pt-4");
      }
      jQuery(".widget-tooltip-close").hide();
    } else {
      isFullScreen = 0;
      if (!is_mobile) {
        jQuery("#wg_message").css("width", "calc(330px - 44px - 15px)"); //44px is plane icon; 15px is margin
      }
      jQuery("#msgSent-downloadForm").css("top", "");
      jQuery("#msgSent-downloadForm").css("margin-top", "0px");
      jQuery("#wg_upl_fileInfo").css("color", "#606369");
      jQuery("#interpreter-holder").css("top", "70px");
      jQuery("#interpreter-holder").css("width", "100%");
      jQuery("#interpreter-holder").css("min-height", "200px");
      jQuery("#interpreter-holder").css("overflow", "hidden");
      jQuery("#interpreter-holder").css("position", "relative");
      jQuery("#interpreter-holder").css("height", "200px");
      jQuery("#interpreter-holder").css("left", "0px");
      jQuery("#close-FS").addClass("translate-widget-d-none");
      jQuery("#fullscreen-block").removeClass("translate-widget-d-none");
      jQuery("#telegButton").css("left", "");
      jQuery(".CaiAppHeader").removeClass("border-radius-none");
      jQuery(".CaiAppChat")
        .removeClass("ReCastAppChatFullScreen")
        .removeClass("border-radius-none");
      jQuery("#close-FS").addClass("translate-widget-d-none");
      jQuery("#fullscreen-block").removeClass("translate-widget-d-none");
      jQuery("#fullscreen-buttons")
        .removeClass("fullscreen-buttons")
        .removeClass("translate-widget-d-flex")
        .removeClass("translate-widget-flex-row")
        .removeClass("translate-widget-align-items-center");
      jQuery(".text-buttons").removeClass("o2").removeClass("fs-right");
      jQuery("#webChat-off").removeClass("fs-chat-off");
      jQuery(".fullscreen-footer").addClass("translate-widget-d-none");
      jQuery(".translatorWebcam").removeClass("minH");
      jQuery(".full-screen-button").addClass("fs-button");
      jQuery(".myWebCam").addClass("smallscreen");
      jQuery("#interpreter-holder").addClass("pt-100");
      if (is_commercial === 1) {
      }
      if (is_commercial) {
        document.querySelector(".fs-padding").style.paddingTop = "100px";
      } else {
        document.querySelector(".fs-padding").style.paddingTop = "100px";
      }
    }
  };
  /******** Load jQuery if not present *********/
  if (window.jQuery === undefined || window.jQuery.fn.jquery !== "3.5.1") {
    var script_tag = document.createElement("script");
    script_tag.setAttribute("type", "text/javascript");
    script_tag.setAttribute(
      "src",
      "https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"
    );
    if (script_tag.readyState) {
      script_tag.onreadystatechange = function () {
        // For old versions of IE
        if (this.readyState == "complete" || this.readyState == "loaded") {
          scriptLoadHandler();
        }
      };
    } else {
      // Other browsers
      script_tag.onload = scriptLoadHandler;
    }
    // Try to find the head, otherwise default to the documentElement
    (
      document.getElementsByTagName("head")[0] || document.documentElement
    ).appendChild(script_tag);
  } else {
    // The jQuery version on the window is the one we want to use
    jQuery = window.jQuery;
    loadScript("https://static.opentok.com/v2/js/opentok.min.js");
    main();
  }
  var loadOpenTokScript = function (onload) {
    var script = document.createElement(elements.script);
    script.async = true;
    script.src = "https://static.opentok.com/v2/js/opentok.min.js";
    document.body.appendChild(script);
    document.addEventListener(
      "DOMNodeInserted",
      function (event) {
        var element = event.target;
        if (
          element.id &&
          element.id.indexOf("OT") === 0 &&
          element.parentNode === document.body
        ) {
          element.remove();
          document.removeEventListener("DOMNodeInserted", this);
        }
      },
      false
    );
    script.onload = onload;
  };

  var getCookie = function (name) {
    var matches = document.cookie.match(
      new RegExp(
        "(?:^|; )" +
          name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") +
          "=([^;]*)"
      )
    );
    return matches ? decodeURIComponent(matches[1]) : undefined;
  };

  function loadScript(url, callback) {
    /* Load script from url and calls callback once it's loaded */

    var scriptTag = document.createElement("script");
    scriptTag.setAttribute("type", "text/javascript");
    scriptTag.setAttribute("src", url);
    if (typeof callback !== "undefined") {
      if (scriptTag.readyState) {
        /* For old versions of IE */
        scriptTag.onreadystatechange = function () {
          if (this.readyState === "complete" || this.readyState === "loaded") {
            callback();
          }
        };
      } else {
        scriptTag.onload = callback;
      }
    }
    (
      document.getElementsByTagName("head")[0] || document.documentElement
    ).appendChild(scriptTag);
  }

  /******** Called once jQuery has loaded ******/
  function scriptLoadHandler() {
    // Restore $ and window.jQuery to their previous values and store the
    // new jQuery in our local jQuery variable
    jQuery = window.jQuery.noConflict(true);
    /* Load jQuery */

    loadScript(
      "https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js",
      function () {
        /* Restore $ and window.jQuery to their previous values and store the
new jQuery in our local jQuery variables. */
        $ = jQuery = window.jQuery.noConflict(true);
        /* Load jQuery plugin and execute the main logic of our widget once the
plugin is loaded is loaded */
        loadScript("https://static.opentok.com/v2/js/opentok.min.js");

        main();
      }
    );
  }

  function eventForm() {
    jQuery("#wg_message").on("input", (e) => {
      if (
        e.currentTarget.value?.trim()?.length ||
        document.querySelector("#widget-input__file").files?.length
      ) {
        jQuery("#telegButton").removeAttr("disabled");
        jQuery(".telegOff").css("display", "none");
        jQuery(".telegOn").css("display", "block");
      } else {
        jQuery("#telegButton").attr("disabled", "disabled");
        jQuery(".telegOn").css("display", "none");
        jQuery(".telegOff").css("display", "block");
      }
    });
    if (is_mobile) {
      jQuery(".widget-close").addClass("translate-widget-d-none");
      jQuery(".RecastAppChat").addClass("RecastAppChat-mobile");
      jQuery(".RollUp").addClass("translate-widget-d-none");
      function handleRotateMessage(e) {
        const orientation = e?.target?.orientation || window.orientation;
        if (orientation !== 0) {
          if (current_frame === "login") {
            jQuery("#loginScreen").addClass("translate-widget-d-none");
          } else if (current_frame === "captcha") {
            jQuery("#video-code-screen").addClass("translate-widget-d-none");
          } else if (current_frame === "waiting_interpreter") {
            jQuery("#webchat-screen").addClass("translate-widget-d-none");
          } else if (current_frame === "call") {
            jQuery("#webchat-screen").addClass("translate-widget-d-none");
          } else if (current_frame === "end-call") {
            jQuery("#last-screen").addClass("translate-widget-d-none");
          }
          jQuery(".mobile-rotate").addClass("mobile-is-rotate");
          jQuery(".widget-block").css("max-height", `100%`);
          jQuery(".widget-block").css("width", `100%`);
          jQuery(".RecastAppChat--content").addClass(
            "RecastAppChat--content-rotate"
          );
          jQuery(".close-mobileWidget").removeClass("translate-widget-d-none");
        } else {
          if (current_frame === "login") {
            jQuery("#loginScreen").removeClass("translate-widget-d-none");
          } else if (current_frame === "captcha") {
            jQuery("#video-code-screen").removeClass("translate-widget-d-none");
          } else if (current_frame === "waiting_interpreter") {
            jQuery("#webchat-screen").removeClass("translate-widget-d-none");
          } else if (current_frame === "call") {
            jQuery("#webchat-screen").removeClass("translate-widget-d-none");
          } else if (current_frame === "end-call") {
            jQuery("#last-screen").removeClass("translate-widget-d-none");
          }
          jQuery(".mobile-rotate").removeClass("mobile-is-rotate");
          jQuery(".widget-block").css("max-height", "530px");
          jQuery(".widget-block").css("width", `100%`);
          jQuery(".RecastAppChat--content").removeClass(
            "RecastAppChat--content-rotate"
          );
        }
      }

      handleRotateMessage();
      jQuery(window).on("orientationchange", handleRotateMessage);
      jQuery(".fs-button").addClass("translate-widget-d-none");
    } else {
      jQuery(".fs-button").removeClass("translate-widget-d-none");
    }

    if (is_commercial === 1) {
      jQuery(".RecastAppChat--content").css("height", "calc(100% - 82px)");
      jQuery(".RollUp").css("padding-right", "20px");
      jQuery(".close-mobileWidget").css("padding-right", "10px");
      jQuery(".text-when-loading").addClass("text-when-loadingPR");
      jQuery(".widget-position").css("bottom", "135px");
      jQuery(".widget-block").css("margin-bottom", "210px");
      jQuery("#link_privacy_policy").attr(
        "href",
        "https://tdl.com.ua/pages/view/politika-konfidencijnosti"
      );
      jQuery("#link_privacy_policy2").attr(
        "href",
        "https://tdl.com.ua/pages/view/politika-konfidencijnosti#agreebutton"
      );
      jQuery(".remove_commercial").remove();
      jQuery(".textComercial").html("ПОСЛУГА «ПОЧУЙ МЕНЕ»");
      jQuery(".textComercialSlog").html("ЗВЕРНЕННЯ ЖЕСТОВОЮ МОВОЮ");

      try {
        if (!(jQuery.type(jsonHtml["widget-title"]) == "undefined")) {
          if (jQuery.type(jsonHtml["widget-title"]["header"]) != "undefined") {
            jQuery(".textComercial").html(jsonHtml["widget-title"]["header"]);
            document.querySelector(".textComercialSlog").style.fontSize =
              "10px";
            document.querySelector(".CaiAppHeader-title").style.fontSize =
              "18px";
          }
        } else {
          document.querySelector(".textComercialSlog").style.fontSize = "10px";
          document.querySelector(".CaiAppHeader-title").style.fontSize = "17px";
        }
      } catch (e) {
        console.log(e);
        //document.querySelector(".textComercialSlog").style.fontSize = "10px";
        document.querySelector(".CaiAppHeader-title").style.fontSize = "17px";
      }
      jQuery(".remove_commercial").remove();
      //jQuery(".textComercial").html("ПОСЛУГА «ПОЧУЙ МЕНЕ»");
      jQuery(".textComercialSlog").html("ЗВЕРНЕННЯ ЖЕСТОВОЮ МОВОЮ");
      jQuery(".CaiAppHeader-title");
      jQuery("#regEmail").removeClass("translate-widget-d-none");
      jQuery(".widget-tooltipOff").mouseover(function () {
        jQuery(".widget-tooltip").css("display", "block");
        jQuery(".widget-tooltip").removeClass("translate-widget-d-none");
      });
      jQuery(".widget-tooltipOff").mouseout(function () {
        jQuery(".widget-tooltip").css("display", "none");
        jQuery(".widget-tooltip").addClass("translate-widget-d-none");
      });
      jQuery(".widget-tooltipOff").on("click", () => {
        window.tfp_widget_open = true;
        jQuery("#widget-tooltip-help").addClass("translate-widget-d-none");
        jQuery(".open").removeClass("translate-widget-d-none");
        jQuery("#widget-tooltip").addClass("translate-widget-d-none");
        jQuery("#widget-close").css("display", "block");
        jQuery("#widget-close").removeClass("translate-widget-d-none");
        jQuery(".reg-buttons").removeClass("translate-widget-d-none");
        jQuery("#widget-text").removeClass("translate-widget-d-none");
        jQuery("#s_code").removeClass("translate-widget-d-none");
        jQuery("#regEmail").show();
        Application.View.Capcha();
      });

      document.querySelector(".fs-button").style.marginTop = "-15px";
      document.querySelector("#webChat-off").style.marginTop = "25px";
      jQuery("#callUs-again").removeClass("mt-2");
      jQuery("#callUs-again").addClass("lastscreen-btnMt");
      jQuery(".full-screen-button").on("click", () => {
        jQuery(".widget-input__file-icon-wrapper").css("margin-left", "5px");
      });
      jQuery("#close-FS").on("click", () => {
        jQuery("#interpreter-holder").addClass("close-fs-pt0");
        jQuery("#myWC-FS").removeClass("myWC-fS");
        jQuery(".chatAns-FS").css("padding-top", "0px");
        jQuery(".widget-input__file-icon-wrapper").css("margin-left", "5px");
        document.querySelector(".myWebCam").style.maxHeight = "70px";
        document.querySelector(".myWebCam").style.maxWidth = "100px";
        document.querySelector("#close-FS").style.paddingTop = "50px";
        jQuery("#msgSent-downloadForm").css("margin-left", "0px");
        jQuery("#msgSent-downloadForm").css("margin-top", "-40px");
        jQuery(".widget-input__file-button-text").css("margin-left", "-18px");
        jQuery(".MsgSucces").css("position", "absolute");
        jQuery(".MsgSucces").css("top", "0");
        jQuery(".MsgSucces").css("margin-top", "10px");
        jQuery("#test-minWEB").addClass("test-minWeb");
        jQuery("#chatAns").removeClass("chatAns-FS");
        jQuery(".text-buttons").removeClass("text-buttonsFS");
        jQuery("#interpreted-holder").removeClass("fullScreen-inter");
        jQuery("#widget-close").removeClass("translate-widget-d-none");
      });

      function validateEmail(email) {
        const re =
          /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        return re.test(email);
      }

      jQuery("#fullscreen-block").on("click", () => {
        jQuery("#myWC-FS").addClass("myWC-fS");
        document.querySelector(".myWebCam").style.maxHeight = "130px";
        document.querySelector(".myWebCam").style.maxWidth = "190px";
        document.querySelector("#close-FS").style.paddingTop = "40px";
        jQuery("#test-minWEB").removeClass("test-minWeb");
        jQuery("#chatAns").addClass("chatAns-FS");
        jQuery(".text-buttons").removeClass("pt-2").addClass("text-buttonsFS");
        jQuery("#interpreted-holder").addClass("fullScreen-inter");
        jQuery("#chatAns").css("margin-top", "0px");
        jQuery("#chatAns").css("top", "");
      });
    } else {
      jQuery(".widget-tooltip").css("margin-top", "0px");
      jQuery(".widget-tooltip").css("margin-right", "21px");
      jQuery(".RecastAppChat--content").css("height", "calc(100% - 72px)");
      jQuery(".RollUp").css("padding-right", "10px");
      jQuery(".close-mobileWidget").css("padding-right", "0px");
      jQuery(".text-when-loading").addClass("text-when-loadingPR");
      jQuery("#link_privacy_policy").attr(
        "href",
        "https://tdl.com.ua/pages/view/politika-konfidencijnosti"
      );
      jQuery("#link_privacy_policy2").attr(
        "href",
        "https://tdl.com.ua/pages/view/politika-konfidencijnosti#agreebutton"
      );

      jQuery(".loginHeader")
        .removeClass(".loginHeader-padding")
        .addClass("logiHeader-paddingNonCom");
      jQuery(".commercial").removeClass(".pb-3").addClass("pb-3NonCom");
      jQuery(".CaiAppHeader").addClass("header-paddingNonCom");
      jQuery(".CaiAppHeader").removeClass(".header-padding");
      jQuery(".privacy-policy")
        .removeClass(".privacy-policy-padding")
        .addClass("privacy-policy-paddingNonCom");
      document.querySelector(".smallscreen").style.paddingTop = "72px";
      document.querySelector(".fs-button").style.paddingTop = "115px";
      document.querySelector("#webChat-off").style.marginTop = "25px";
      jQuery(".myWebCam")
        .addClass("smallscreenNonCom")
        .removeClass("smallscreen");
      document.querySelector(".full-screen-button").style.paddingTop = "110px";
      jQuery(".fs-button").on("click", () => {
        jQuery("#telegButton").css("margin-left", "20px");
        jQuery(".widget-input__wrapper").css("margin-left", "20px");
      });

      jQuery("#close-FS").on("click", () => {
        jQuery("#interpreter-holder").addClass("close-fs-pt0");
        jQuery("#myWC-FS").removeClass("myWC-fS");
        document.querySelector(".myWebCam").style.maxHeight = "70px";
        document.querySelector(".myWebCam").style.maxWidth = "100px";
        document.querySelector("#close-FS").style.paddingTop = "50px";
        jQuery("#msgSent-downloadForm").css("margin-left", "0px");
        jQuery("#test-minWEB").addClass("test-minWeb");
        jQuery("#chatAns").removeClass("chatAns-FS");
        jQuery(".text-buttons").removeClass("text-buttonsFS");
        jQuery("#interpreter-holder").removeClass("ptNonCom");
        jQuery("#widget-close").removeClass("translate-widget-d-none");
      });
      jQuery("#webChat-off").on("click", () => {
        jQuery("#lastscreenHeader").addClass("lastScreenHeaderNonCom");
        jQuery("#myWC-FS").removeClass("myWC-fS");
      });
      jQuery("#fullscreen-block").on("click", () => {
        jQuery("#myWC-FS").addClass("myWC-fS");
        document.querySelector(".myWebCam").style.maxHeight = "130px";
        document.querySelector(".myWebCam").style.maxWidth = "190px";
        document.querySelector("#close-FS").style.paddingTop = "40px";
        jQuery("#test-minWEB").removeClass("test-minWeb");
        jQuery("#chatAns").addClass("chatAns-FS");
        jQuery(".text-buttons").removeClass("pt-2").addClass("text-buttonsFS");
        jQuery(".fs-padding").removeClass("ptFsButton");
        jQuery("#interpreted-holder").addClass("fullScreen-inter");
      });
      jQuery("#widget-tooltip").on("click", (event) => {
        jQuery("#widget-tooltip-help").addClass("translate-widget-d-none");
        jQuery(".open").removeClass("translate-widget-d-none");
        jQuery("#widget-tooltip").addClass("translate-widget-d-none");
        jQuery("#widget-close").removeClass("translate-widget-d-none");
        Application.View.Capcha();
        jQuery(".reg-buttons").removeClass("translate-widget-d-none");
        jQuery("#widget-text").removeClass("translate-widget-d-none");
        jQuery("#s_code").removeClass("translate-widget-d-none");
        jQuery("#regEmail").addClass("translate-widget-d-none");
        const mediaQuery = window.matchMedia("(min-width: 430px)");
      });

      if (!is_mobile) {
        jQuery("#widget-tooltip").mouseover(function () {
          jQuery(".widget-tooltip").css("display", "block");
          jQuery(".widget-tooltip").removeClass("translate-widget-d-none");
          jQuery(".widget-tooltipOn").removeClass("translate-widget-d-none");
          jQuery(".widget-tooltipOff").addClass("translate-widget-d-none");
        });

        jQuery("#widget-tooltip").mouseout(function () {
          jQuery(".widget-tooltip").css("display", "none");
          jQuery(".widget-tooltip").addClass("translate-widget-d-none");
          jQuery(".widget-tooltipOn").addClass("translate-widget-d-none");
          jQuery(".widget-tooltipOff").removeClass("translate-widget-d-none");
        });
      }
      jQuery(".textComercialSlog").html("Допомога онлайн");
      jQuery(".is_commercial").show();
      jQuery("#regEmail").hide();
      jQuery(".remove_commercial").show();
      document.querySelector(".textComercialSlog").style.fontSize = "12px";
      document.querySelector(".CaiAppHeader-title").style.fontSize = "13px";
      if (is_mobile) {
        jQuery(".widget-tooltipOff").addClass("translate-widget-d-none");
        jQuery(".widget-tooltipOn").removeClass("translate-widget-d-none");
      }
    }
    if (allow_upload === 1) {
      jQuery(".widget-input__wrapper").removeClass("translate-widget-d-none");
      jQuery(".text-webChat").css("padding-left", "40px");
      jQuery(".text-webChat").css("text-indent", "0px");
    } else {
      jQuery(".widget-input__wrapper").addClass("translate-widget-d-none");
      jQuery("#telegButton").css("bottom", "-29px");
      jQuery(".text-webChat").css("padding-left", "0px");
      jQuery(".text-webChat").css("text-indent", "0px");
    }
    jQuery(".close-mobileWidget").on("click", () => {
      Application.View.CloseAll();
      document.querySelector(".widget-input").style.borderColor =
        "#dadada !important";
      jQuery("#widget-close").addClass("translate-widget-d-none");
      jQuery("#loginScreen").addClass("translate-widget-d-flex");
      jQuery("#loginScreen").css("display", "block");
      jQuery("#video-code-screen").addClass("translate-widget-d-none");
    });

    jQuery(".RollUp").on("click", (event) => {
      jQuery(".widget-operatorRollUp").show();
      jQuery(".widget-operatorRollUp").removeClass("translate-widget-d-none");
      jQuery("#widget-tooltip").addClass("translate-widget-d-none");
      jQuery("#widget-close").addClass("translate-widget-d-none");
      if (isFullScreen === 1) {
        jQuery(".widget-block").addClass("translate-widget-d-none");
      }
    });
    jQuery(".widget-operatorRollUp").on("click", (event) => {
      if (isFullScreen === 0 && !is_mobile) {
        jQuery("#widget-close").removeClass("translate-widget-d-none");

        if (isFullScreen === 1) {
          jQuery(".widget-block").removeClass("translate-widget-d-none");
        }
      }

      jQuery(".open").removeClass("translate-widget-d-none");
      jQuery(".widget-operatorRollUp").addClass("translate-widget-d-none");
      const mediaQuery = window.matchMedia("(min-width: 430px)");
      if (is_mobile) {
        jQuery(".widget-operatorRollUpp").css("padding-right", "8px");
      }
    });
    jQuery(".mobileRollUp").on("click", (event) => {
      jQuery(".widget-operatorRollUp").show();
      jQuery(".widget-operatorRollUp").removeClass("translate-widget-d-none");
      jQuery("#widget-tooltip").addClass("translate-widget-d-none");
      jQuery(".open").addClass("translate-widget-d-none");
    });

    jQuery("#regFIO").on("input", function () {
      let regFio = document.querySelector("#regFIO");
      let regTel = document.querySelector("#regTELEPHONE");
      let regButt = document.querySelector("#regButton");
      if (regFio.value !== "" && regTel.value.length == 18) {
        jQuery("#regButton").removeClass("op3");
        regButt.disabled = false;
        jQuery("#regButton").addClass("cursorPr");
      } else {
        regButt.disabled = true;
        jQuery("#regButton").addClass("op3");
        jQuery("#regButton").removeClass("cursorPr");
      }
    });
    jQuery("#regTELEPHONE").on("input", function () {
      let regFio = document.querySelector("#regFIO");
      let regTel = document.querySelector("#regTELEPHONE");
      let regButt = document.querySelector("#regButton");
      if (regFio.value !== "" && regTel.value.length == 18) {
        jQuery("#regButton").removeClass("op3");
        regButt.disabled = false;
        jQuery("#regButton").addClass("cursorPr");
      } else {
        regButt.disabled = true;
        jQuery("#regButton").addClass("op3");
        jQuery("#regButton").removeClass("cursorPr");
      }
    });

    jQuery("#s_code").on("input", function () {
      console.log("change");
      let capcha = document.querySelector("#s_code");
      let capchabtn = document.querySelector("#video-code-button");
      if (capcha.value?.length >= 4) {
        jQuery("#video-code-button").removeClass("op3");
        capchabtn.disabled = false;
        jQuery("#video-code-button").addClass("cursorPr");
      } else {
        capchabtn.disabled = true;
        jQuery("#video-code-button").addClass("op3");
        jQuery("#video-code-button").removeClass("cursorPr");
      }
    });
    //--- Свернуть окно
    jQuery("#close-FS").on("click", (event) => {
      Application.View.FullScreen(0);
      jQuery("#interpreted-holder").removeClass("fullScreen-inter");
    });
    //--- Close

    //////////Проверяем ввод кода с видео

    jQuery("#video-code-button").on("click", () => {
      var enterCode2 = jQuery("#s_code").val();
      var enterCode = enterCode2.replace("/s+/ig", "");
      if (enterCode == "") {
        Application.View.CapchaFail();
      } else {
        Application.View.CapchaChek(enterCode);
      }
    });

    jQuery("#widget-close").hide();
    jQuery(".widget-tooltip").hide();
    jQuery(".widget-tooltip-close").hide();
    jQuery("#widget-close").mouseover(function (event) {
      jQuery(".widget-closeRed").removeClass("translate-widget-d-none");
      jQuery(".widget-closeBlue").addClass("translate-widget-d-none");
      jQuery(".widget-tooltip-close").css("display", "block");
    });
    jQuery("#widget-close").mouseout(function (event) {
      jQuery(".widget-closeBlue").removeClass("translate-widget-d-none");
      jQuery(".widget-closeRed").addClass("translate-widget-d-none");
      jQuery(".widget-tooltip-close").css("display", "none");
    });

    jQuery("#fullscreen-block").on("click", (event) => {
      Application.View.FullScreen(1);
      jQuery(".CaiAppHeader").addClass("border-radius-none");
      jQuery(".CaiAppChat")
        .addClass("ReCastAppChatFullScreen")
        .addClass("border-radius-none");
      jQuery("#widget-close").addClass("translate-widget-d-none");
      jQuery("#close-FS").removeClass("translate-widget-d-none");
      jQuery("#fullscreen-block").addClass("translate-widget-d-none");
      jQuery("#last-screen").addClass("translate-widget-d-none");
      document.querySelector(".ReCastAppChatFullScreen").style.backgroundColor =
        "#f4f4f4";
      jQuery("#fullscreen-buttons")
        .addClass("fullscreen-buttons")
        .addClass("translate-widget-d-flex")
        .addClass("translate-widget-flex-row")
        .addClass("translate-widget-align-items-center");
      jQuery(".text-buttons").addClass("o2").addClass("fs-right");
      jQuery("#webChat-off").addClass("fs-chat-off");
      jQuery(".translatorWebcam").addClass("minH");
      jQuery(".fullscreen-footer").removeClass("translate-widget-d-none");
      jQuery("#minScreen")
        .removeClass("translate-widget-align-items-center")
        .addClass("align-items-start")
        .css("flex-wrap", "nowrap");
      jQuery("#interpreter-holder").removeClass("pt-100");
      jQuery(".full-screen-button").removeClass("fs-button");
      jQuery(".myWebCam").removeClass("smallscreen");
      document.querySelector(".text-fs").style.color = "white";
      jQuery(".OT_widget-container")
        .children("OT_mini")
        .addClass("mywebFullScreen");
    });

    jQuery("#close-FS").on("click", (event) => {
      Application.View.FullScreen(0);
      jQuery(".OT_mini").removeClass("mywebFullScreen");
    });
    //Вводим данные только тогда кнопка работает

    //-- CloseAll
    jQuery("#widget-close").on("click", (event) => {
      Application.View.CloseAll();
      document.querySelector(".widget-input").style.borderColor =
        "#dadada !important";
      jQuery("#widget-close").addClass("translate-widget-d-none");
      jQuery("#loginScreen").addClass("translate-widget-d-flex");
      jQuery("#loginScreen").css("display", "block");
      jQuery("#video-code-screen").addClass("translate-widget-d-none");
    });
    jQuery("#widget-tooltip").on("click", (event) => {
      document.querySelector("#regFIO").style.color = "#969696";
      document.querySelector("#regFIO").style.marginBottom = "0";
      document.querySelector("#regTELEPHONE").style.color = "#969696";
      document.querySelector("#regTELEPHONE").style.marginBottom = "0";
      document.querySelector("#regEmail").style.color = "#969696";
      document.querySelector("#s_code").style.borderColor = "#dadada";
    });
    jQuery(".widget-tooltipOn").on("click", (event) => {
      jQuery(".open").removeClass("translate-widget-d-none");
      jQuery("#widget-tooltip").addClass("translate-widget-d-none");
      jQuery("#widget-close").removeClass("translate-widget-d-none");
      jQuery("#widget-close").css("display", "block");
      Application.View.Capcha();
      jQuery(".reg-buttons").removeClass("translate-widget-d-none");
      jQuery("#widget-text").removeClass("translate-widget-d-none");
      jQuery("#s_code").removeClass("translate-widget-d-none");
      const mediaQuery = window.matchMedia("(min-width: 430px)");
      if (is_mobile) {
        jQuery("#widget-tooltip").addClass("translate-widget-d-none");
        jQuery("#widget-close").addClass("translate-widget-d-none");
      }
    });
    jQuery("#regButton").on("click", (event) => {
      current_frame = "captcha";
      jQuery("#loginScreen").removeClass("translate-widget-d-flex");
      jQuery("#loginScreen").fadeOut(100);
      jQuery("#video-code-screen").fadeIn(500);
      jQuery("#video-code-screen").removeClass("translate-widget-d-none");
      Application.Registred();
    });

    //--- Button finish call
    jQuery("#webChat-off").on("click", (event) => {
      Application.endCall();
      Application.View.FullScreen(0);
      Application.View.Disconnect();
      jQuery("#webchat-screen").addClass("translate-widget-d-none");
      jQuery("#last-screen").removeClass("translate-widget-d-none");
      jQuery("#close-FS").addClass("translate-widget-d-none");
      jQuery("#fullscreen-block").removeClass("translate-widget-d-none");
      jQuery(".CaiAppHeader").removeClass("border-radius-none");
      jQuery(".CaiAppChat")
        .removeClass("ReCastAppChatFullScreen")
        .removeClass("border-radius-none");
      if (!is_mobile) {
        jQuery("#widget-close").removeClass("translate-widget-d-none");
      }
      jQuery("#fullscreen-block").removeClass("translate-widget-d-none");
      jQuery("#fullscreen-buttons")
        .removeClass("fullscreen-buttons")
        .removeClass("translate-widget-d-flex")
        .removeClass("translate-widget-flex-row")
        .removeClass("translate-widget-align-items-center");
      jQuery(".text-buttons").removeClass("o2").removeClass("fs-right");
      jQuery("#webChat-off").removeClass("fs-chat-off");
      jQuery(".fullscreen-footer").addClass("translate-widget-d-none");
      jQuery(".text-buttons").removeClass("text-buttonsFS");
      jQuery(".text-buttons").removeClass("fs-right");
      jQuery(".text-buttons").removeClass("pt-2");
      jQuery("#msgSent-downloadForm").css("margin-left", "0px");
      jQuery("#msgSent-downloadForm").css("margin-top", "0px");
      jQuery("#msgSent-downloadForm").css("top", "");
    });

    //-- Шаг 3 - Соеденить еще раз
    jQuery("#callUs-again").on("click", (event) => {
      Application.View.FullScreen(0);
      Application.initCall();
      jQuery("#webchat-screen").removeClass("translate-widget-d-none");
      jQuery("#last-screen").addClass("translate-widget-d-none");
      jQuery(".text-when-loading").removeClass("translate-widget-d-none");
    });

    jQuery("#regFIO").focusin(function () {
      let regFio = document.querySelector("#regFIO");
      regFio.placeholder = "";
      regFio.style.color = "black";
    });

    jQuery("#regFIO").focusout(function () {
      let regFio = document.querySelector("#regFIO");
      regFio.placeholder = "Прізвище, ім'я та по-батькові";
      if (regFio.value !== "") {
        regFio.style.color = "black";
      } else {
        regFio.style.color = "#969696";
      }
    });

    jQuery("#regEmail").focusin(function () {
      let regMail = document.querySelector("#regEmail");
      regMail.placeholder = "";
      regMail.style.color = "black";
    });

    jQuery("#regEmail").focusout(function () {
      let regMail = document.querySelector("#regEmail");
      regMail.placeholder = "Електронна пошта";

      if (regMail.value !== "") {
        regMail.style.color = "black";
      } else {
        regMail.style.color = "#969696";
      }
    });

    jQuery("#regTELEPHONE").focusin(function () {
      let regTel = document.querySelector("#regTELEPHONE");
      regTel.placeholder = "";
      regTel.style.color = "black";
    });

    jQuery("#regTELEPHONE").focusout(function () {
      let regTel = document.querySelector("#regTELEPHONE");
      regTel.placeholder = "Номер Вашого телефону";
      if (regTel.value !== "") {
        regTel.style.color = "black";
      } else {
        regTel.style.color = "#969696";
      }
    });

    //------- ЧАТ

    jQuery("#telegButton").click(function () {
      jQuery("#msgSent-downloadForm").submit();
    });

    var $ = { d: window.document, w: window };

    /*
     * el - анимируемый элемент
     * props - сущность анимации
     * opts - характеристики
     * cb - коллбэк
     */
    $.w.ltAnimate = function (el, props, opts, cb) {
      var self = this,
        id = new Date().getTime(); // id анимации

      self._debug = true;
      // проверяем элемент
      if (typeof el == "string" && el) el = this.ltElem(el);
      if (
        typeof el != "object" ||
        !el ||
        typeof el.nodeType != "number" ||
        el.nodeType > 1
      ) {
        doFail("Нет анимируемого элемента");
        return;
      }
      // проверяем аргумент opts
      switch (typeof opts) {
        case "number":
          opts = { duration: opts };
          break;
        case "function":
          opts = { cbDone: opts };
          break;
        case "object":
          if (!opts) opts = {};
          break;
        default:
          opts = {};
      }
      if (typeof cb == "function") opts.cbDone = cb;
      // устанавливаем умолчания
      var defaultOptions = {
        tick: 10, // период отрисовки нового кадра в миллисекундах, задаётся только здесь
        duration: 1000, // длительность выполнения анимации
        easing: "linear", // функция расчёта параметров
      };
      // заносим в массив, что будем выполнять
      var instructions = [];
      for (var key in props) {
        if (!props.hasOwnProperty(key)) continue;
        instructions.push([key, props[key]]);
      }
      // если выполнять нечего, выдаём ошибку
      if (instructions.length === 0) {
        doFail("Не сказано, что делать с элементом");
        return;
      }
      // перезаписываем опции клиентскими значениями
      var optionsList = [],
        easing = { linear: 1, swing: 1, quad: 1, cubic: 1 };
      for (var key in opts) {
        if (!opts.hasOwnProperty(key)) continue;
        switch (key) {
          case "duration":
            if (typeof opts[key] != "number") {
              continue;
            }
            break;
          case "easing":
            if (typeof easing[opts[key]] == "undefined") {
              continue;
            }
            break;
          case "cbDone":
          case "cbFail":
            if (typeof opts[key] != "function") {
              continue;
            }
            break;
          default:
            continue;
        }
        optionsList.push([key, opts[key]]);
      }

      // формируем options на основе defaultOptions
      var options = defaultOptions;
      if (optionsList.length) {
        for (var i = 0; i < optionsList.length; i++) {
          if (optionsList[i][0] == "duration")
            options.duration = optionsList[i][1];
          if (optionsList[i][0] == "easing") options.easing = optionsList[i][1];
          if (optionsList[i][0] == "cbDone") options.cbDone = optionsList[i][1];
          if (optionsList[i][0] == "cbFail") options.cbFail = optionsList[i][1];
        }
      }

      // объект, куда будут записываться параметры элемента при старте анимации
      var startParams = {};

      // если вторая или более анимация на этом объекте
      if (el.ltAnimateQueue && el.ltAnimateQueue.length > 0) {
        // смотрим, через сколько её нужно будет попытаться выполнить (точно предугадать нельзя, т.к. несколько мс уходит на исполнение кода)
        var animateEnds = 1,
          timeNow = new Date().getTime();

        for (var i = 0; i < el.ltAnimateQueue.length; i++) {
          if (i == 0) {
            animateEnds =
              el.ltAnimateQueue[i][1] - timeNow + el.ltAnimateQueue[i][0];
          } else {
            animateEnds += el.ltAnimateQueue[i][1];
          }
        }

        // заносим анимацию в очередь анимаций
        el.ltAnimateQueue.push([timeNow + animateEnds, options.duration]);

        // через посчитанное время смотрим, действительно ли все предыдущие анимации завершились и можно ли выполнять эту
        var thisTimeout = $.w.setTimeout(function () {
          checkAnimation();
        }, animateEnds);

        // массив таймаутов, которые поставлены для активации анимации, нужен при вызове ltAnimateStop
        if (!el.ltAnimateTimeouts) {
          el.ltAnimateTimeouts = [];
        }
        el.ltAnimateTimeouts.push(thisTimeout);

        // первая анимация на объекте
      } else {
        // создаём очередь выполнения анимаций, если первая анимация на элементе
        el.ltAnimateQueue = [[new Date().getTime(), options.duration]];
        startAnimation();
      }

      // проверяем, действительно ли никакие анимации не выполняются и можно запускать эту
      function checkAnimation() {
        // если никаких анимаций не выполняется, то сразу запускаем
        if (!el.ltAnimateIsDoing) {
          startAnimation();
        } else {
          // периодически опрашиваем, действительно ли анимации закончились
          function _check() {
            if (!el.ltAnimateIsDoing) {
              $.w.clearInterval(_checking);
              startAnimation();
            }
          }
          var _checking = $.w.setInterval(_check, 30);
        }
      }

      // запуск анимации
      function startAnimation() {
        // флаг выполнения анимации
        el.ltAnimateIsDoing = true;

        // размеры элемента
        var startStyles = self.ltStyle(el);

        // запоминаем стартовые значения свойств элемента
        startParams.left = parseInt(startStyles.left);
        startParams.right = parseInt(startStyles.right);
        startParams.top = parseInt(startStyles.top) + 0.01;
        startParams.bottom = parseInt(startStyles.bottom) - 0.01;
        startParams.width = parseInt(startStyles.width);
        startParams.height = parseInt(startStyles.height);
        startParams.opacity = parseFloat(startStyles.opacity);
        startParams.marginTop = parseInt(startStyles.marginTop);
        startParams.marginBottom = parseInt(startStyles.marginBottom);
        startParams.marginLeft = parseInt(startStyles.marginLeft);
        startParams.marginRight = parseInt(startStyles.marginRight);
        startParams.parentWidth = parseInt(self.ltStyle(el.parentNode).width);
        startParams.parentHeight = parseInt(self.ltStyle(el.parentNode).height);

        // проверки и подстановки для Chrome и IE
        for (key in startParams) {
          if (key == "left" && !startParams[key]) {
            startParams.left =
              startParams.parentWidth - startParams.right - startParams.width ||
              0;
          }
          if (key == "right" && !startParams[key]) {
            startParams.right =
              startParams.parentWidth - startParams.left - startParams.width ||
              0;
          }
          if (key == "bottom" && !startParams[key]) {
            startParams.bottom =
              startParams.parentHeight - startParams.top - startParams.height ||
              0;
          }
          if (key == "top" && !startParams[key]) {
            startParams.top =
              startParams.parentHeight -
                startParams.bottom -
                startParams.height || 0;
          }
        }
        // выполнение анимации
        el.currentAnimation = new doAnimation({
          element: el,
          delay: defaultOptions.delay,
        });
      }

      // выполняем анимацию
      function doAnimation(params) {
        var element = params.element,
          self = this,
          stopInterval; // таймер, применяемый при остановке анимации
        // количество итераций анимации
        var animationLength = options.duration / options.tick,
          counter = 0;
        // выполняемые функции
        var exec = [],
          percent = false;
        for (var i = 0; i < instructions.length; i++) {
          // значение параметра
          var val = instructions[i][1].toString();
          // смотрим, задан ли параметр в процентах
          val.match(/\%/) ? (percent = true) : (percent = false);
          val = parseFloat(val);
          var x;
          switch (instructions[i][0]) {
            case "top":
              x = function (factor, val, percent) {
                element.style.bottom = "";
                element.style.top =
                  startParams.top -
                  (startParams.top -
                    (percent ? (startParams.parentHeight * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "bottom":
              x = function (factor, val, percent) {
                element.style.top = "";
                element.style.bottom =
                  startParams.bottom -
                  (startParams.bottom -
                    (percent ? (startParams.parentHeight * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "left":
              x = function (factor, val, percent) {
                element.style.right = "";
                element.style.left =
                  startParams.left -
                  (startParams.left -
                    (percent ? (startParams.parentWidth * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "right":
              x = function (factor, val, percent) {
                element.style.left = "";
                element.style.right =
                  startParams.right -
                  (startParams.right -
                    (percent ? (startParams.parentWidth * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "width":
              x = function (factor, val, percent) {
                element.style.width =
                  startParams.width -
                  (startParams.width -
                    (percent ? (startParams.width * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "height":
              x = function (factor, val, percent) {
                element.style.height =
                  startParams.height -
                  (startParams.height -
                    (percent ? (startParams.height * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "opacity":
              x = function (factor, val, percent) {
                // IE8
                if (!$.w.getComputedStyle) {
                  element.style.filter =
                    "alpha(opacity=" +
                    (startParams.opacity -
                      (startParams.opacity - (percent ? val / 100 : val)) *
                        factor) *
                      100 +
                    ")";
                } else {
                  element.style.opacity =
                    startParams.opacity -
                    (startParams.opacity - (percent ? val / 100 : val)) *
                      factor;
                }
              };
              break;
            case "marginTop":
              x = function (factor, val, percent) {
                element.style.marginBottom = "auto";
                element.style.marginTop =
                  startParams.marginTop -
                  (startParams.marginTop -
                    (percent ? (startParams.height * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "marginBottom":
              x = function (factor, val, percent) {
                element.style.marginTop = "auto";
                element.style.marginBottom =
                  startParams.marginBottom -
                  (startParams.marginBottom -
                    (percent ? (startParams.height * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "marginLeft":
              x = function (factor, val, percent) {
                element.style.marginRight = "auto";
                element.style.marginLeft =
                  startParams.marginLeft -
                  (startParams.marginLeft -
                    (percent ? (startParams.width * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            case "marginRight":
              x = function (factor, val, percent) {
                element.style.marginLeft = "auto";
                element.style.marginRight =
                  startParams.marginRight -
                  (startParams.marginRight -
                    (percent ? (startParams.width * val) / 100 : val)) *
                    factor +
                  "px";
              };
              break;
            // если попытка анимировать неподдерживаемое свойство, просто ничего не делаем
            default:
              x = function () {};
          }
          // заносим выполняемые функции в массив
          exec.push([x, val, percent]);
        }

        var eLength = exec.length;

        // выполняем анимацию с заданным интервалом
        // номер интервала, который потом можно прервать в stopAnimation
        el.ltAnimateInterval = $.w.setInterval(function () {
          _animating();
        }, options.tick);

        // интерфейс остановки анимации
        el.stopAnimation = function (jumpToEnd, callback) {
          _animating(animationLength, jumpToEnd, callback);
          // очищаем таймауты очереди ожидания анимации
          if (el.ltAnimateTimeouts) {
            for (var i = 0; i < el.ltAnimateTimeouts.length; i++) {
              $.w.clearTimeout(el.ltAnimateTimeouts[i]);
            }
            el.ltAnimateTimeouts = [];
          }
        };

        // отрисовка
        function _animating(param, jumpToEnd, callback) {
          counter++;
          // переменная принимает значения от 0 до 1
          var progress = counter / animationLength;

          // выключаем анимацию при помощи stopAnimation
          if (param == animationLength) {
            $.w.clearInterval(el.ltAnimateInterval);
            // если нужно завершить в конечной точке
            if (jumpToEnd) _step(getProgress(1));
            // удаляем анимацию из очереди анимаций
            el.ltAnimateQueue.splice(0, 1);
            // выключаем флаг выполнения анимации
            el.ltAnimateIsDoing = false;
            // остановка, если явно не указано по поводу коллбэка
            if (!callback) {
              try {
                options.cbDone();
              } catch (e) {}
            } else {
              try {
                callback();
              } catch (e) {}
            }
            return false;
          }
          // выключаем анимацию, если пройдены все шаги
          if (progress > 1) {
            // делаем заключительный шаг, без него анимация чуть не доезжает до финальной точки (progress меняется дискретно, последнее значение 0.99...)
            _step(getProgress(1));
            $.w.clearInterval(el.ltAnimateInterval);
            // удаляем анимацию из очереди анимаций
            el.ltAnimateQueue.splice(0, 1);
            // выключаем флаг выполнения анимации
            el.ltAnimateIsDoing = false;
            try {
              options.cbDone();
            } catch (e) {}
            return false;
          }
          _step(getProgress(progress));
        }
        function _step(factor) {
          for (var i = 0; i < eLength; i++) {
            var s = exec[i][0],
              val = exec[i][1],
              percent = exec[i][2];
            s(factor, val, percent);
          }
        }
        // переменная для счёта, согласно заданным при вызове параметрам
        function getProgress(p) {
          switch (options.easing) {
            case "linear":
              return p;
              break;
            case "swing":
              return 0.5 - Math.cos(p * Math.PI) / 2;
              break;
            case "quad":
              return Math.pow(p, 2);
              break;
            case "cubic":
              return Math.pow(p, 3);
              break;
            default:
              return p;
          }
        }
      }
      // обработка ошибок
    };

    /*
     * Остановкка анимации: элемент, переход в конечную точку (true/false) и остановить ли выполнение коллбэка (true/false), два последних необязательно
     */
    $.w.ltAnimateStop = function (el, jumpToEnd, callback) {
      // останавливаем анимацию элемента, если она уже есть
      if (!el.ltAnimateInterval) return false;
      el.stopAnimation(jumpToEnd, callback);
    };

    /**
     * Получение всех стилей элемента (если подан только el) либо значения конкретного стиля (в styleName передаётся строка).
     * opts - объект, свойство computed по умолчанию равно true. Если да, возвращает конечный стиль элемента, если false - инлайновый.
     * Если элемент подан неявно (например, тег div) и при поиске выясняется, что подобных элементов на странице несколько, возвращается пустая строка.
     * Для IE8 выполняется преобразование %, auto, thin/medium/thick в нормальный вид.
     * Opacity для IE8 возвращается в нормальном виде (от 0 до 1)
     *
     * @param {DOM} el - обрабатываемый элемент
     * @param {string} style - название стиля, значение которого нужно получить
     * @param {Object} opts - дополнительные опции операции
     *
     * @returns {(number|string)} value - вычисленное значение
     */
    $.w.ltStyle = function (el, styleName, opts) {
      if (!opts || typeof opts != "object" || typeof opts.computed != "boolean")
        opts = { computed: true };
      if (typeof el == "string") el = this.ltElem(el);
      // если возвращается массив (NodeList), то возвращаем пустую строку
      if (!el || !el.nodeType || el.nodeType != 1) return "";
      var _style;
      // в IE8 вместо getComputedStyle есть currentStyle
      if (!$.w.getComputedStyle) {
        var __style = el.currentStyle,
          _style = {};
        for (var i in __style) {
          _style[i] = __style[i];
        }
        // стили, для которых в IE8 существуют родные стили: pixelLeft, pixelRight и так далее - их можно взять напрямую, не считая
        var pixel = {
          left: 1,
          right: 1,
          width: 1,
          height: 1,
          top: 1,
          bottom: 1,
        };
        // для этих стилей используем хак http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
        var other = {
          paddingLeft: 1,
          paddingRight: 1,
          paddingTop: 1,
          paddingBottom: 1,
          marginLeft: 1,
          marginRight: 1,
          marginTop: 1,
          marginBottom: 1,
        };
        var leftCopy = el.style.left;
        var runtimeLeftCopy = el.runtimeStyle.left;
        // для всех стилей сразу
        if (!styleName) {
          // толщина границ в IE8 приходит в виде прилагательных, приводим в нормальный вид
          for (c in _style) {
            if (!_style.hasOwnProperty(c)) continue;
            if (c.indexOf("border") !== 0) continue;
            switch (_style[c]) {
              case "thin":
                _style[c] = 2;
                break;
              case "medium":
                _style[c] = 4;
                break;
              case "thick":
                _style[c] = 6;
                break;
              default:
                _style[c] = 0;
            }
          }
          //pixel
          for (var key in pixel) {
            _style[key] =
              el.style[
                "pixel" +
                  key.charAt(0).toUpperCase() +
                  key.replace(key.charAt(0), "")
              ];
          }
          // вариант замены getComputedStyle для некоторых параметров
          for (var key in other) {
            el.runtimeStyle.left = el.currentStyle.left;
            el.style.left = _style[key];
            _style[key] = el.style.pixelLeft;
            el.style.left = leftCopy;
            el.runtimeStyle.left = runtimeLeftCopy;
          }
          // для одного выбранного стиля
        } else {
          if (_style[styleName]) {
            if (style.indexOf("border") === 0)
              switch (_style[styleName]) {
                case "thin":
                  _style[styleName] = 2;
                  break;
                case "medium":
                  _style[styleName] = 4;
                  break;
                case "thick":
                  _style[styleName] = 6;
                  break;
                default:
                  _style[styleName] = 0;
              }
          } else {
            if (pixel[styleName]) {
              _style[styleName] =
                el.style[
                  "pixel" +
                    key.charAt(0).toUpperCase() +
                    key.replace(key.charAt(0), "")
                ];
            } else {
              el.runtimeStyle.left = el.currentStyle.left;
              el.style.left = _style[styleName];
              _style[styleName] = el.style.pixelLeft;
              el.style.left = leftCopy;
              el.runtimeStyle.left = runtimeLeftCopy;
            }
          }
        }
        // костыль для opacity IE8
        if (_style.filter.match("alpha")) {
          _style.opacity = _style.filter.substr(14);
          _style.opacity =
            parseInt(_style.opacity.substring(0, _style.opacity.length - 1)) /
            100;
        } else {
          _style.opacity = 1;
        }
        // нормальные браузеры
      } else {
        if (opts.computed) {
          _style = $.w.getComputedStyle(el, null);
        } else {
          _style = el.style.styleName;
        }
      }
      if (!styleName) {
        return _style || "";
      } else {
        return _style[styleName] || "";
      }
    };

    var el1 = document.querySelector(".widget-tooltipOff"),
      el2 = document.querySelector(".widget-block"),
      el3 = document.querySelector(".widget-closeRed"),
      el4 = document.querySelector(".RollUp"),
      el5 = document.querySelector(".widget-operatorRollUp"),
      el6 = document.querySelector(".close-mobileWidget"),
      el = document.querySelector(".widget-tooltipOn");

    if (is_mobile) {
      el.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: "100%" },
          { duration: 250, easing: "custom" }
        );
      };
    } else {
      el.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: 370 },
          { duration: 250, easing: "custom" }
        );
      };
    }

    if (is_mobile) {
      el1.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: "100%" },
          { duration: 250, easing: "custom" }
        );
      };
    } else {
      el1.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: 370 },
          { duration: 250, easing: "custom" }
        );
      };
    }
    el3.onclick = function () {
      $.w.ltAnimate(
        el2,
        { height: 0, width: 0 },
        { duration: 300, easing: "custom" }
      );
    };
    el4.onclick = function () {
      $.w.ltAnimate(
        el2,
        { height: 0, width: 0 },
        { duration: 300, easing: "custom" }
      );
    };
    el6.onclick = function () {
      $.w.ltAnimate(
        el2,
        { height: 0, width: "100%" },
        { duration: 300, easing: "custom" }
      );
    };
    if (is_mobile) {
      el5.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: "100%" },
          { duration: 250, easing: "custom" }
        );
      };
    } else {
      el5.onclick = function () {
        $.w.ltAnimate(
          el2,
          { height: 530, width: 370 },
          { duration: 250, easing: "custom" }
        );
      };
    }

    jQuery("#regTELEPHONE")
      .keydown(function (e) {
        var key = e.which || e.charCode || e.keyCode || 0;
        $phone = jQuery(this);

        // Don't let them remove the starting '('
        if ($phone.val().length === 4 && (key === 8 || key === 46)) {
          $phone.val("+38(");
          return false;
        }
        // Auto-format- do not expose the mask as the user begins to type
        if (key !== 8 && key !== 9) {
          if ($phone.val().length === 7) {
            $phone.val($phone.val() + ")");
          }
          if ($phone.val().length === 8) {
            $phone.val($phone.val() + " ");
          }
          if ($phone.val().length === 12) {
            $phone.val($phone.val() + "-");
          }
          if ($phone.val().length === 15) {
            $phone.val($phone.val() + "-");
          }
        }

        // Allow numeric (and tab, backspace, delete) keys only
        return (
          key == 8 ||
          key == 9 ||
          key == 46 ||
          (key >= 48 && key <= 57) ||
          (key >= 96 && key <= 105)
        );
      })

      .bind("focus click", function () {
        $phone = jQuery(this);

        if ($phone.val().length === 0) {
          $phone.val("+38(");
        } else {
          var val = $phone.val();
          $phone.val("").val(val); // Ensure cursor remains at the end
        }
      });

    if (allow_upload === 1) {
      var inputs = document.querySelectorAll(".widget-input__file");
      Array.prototype.forEach.call(inputs, function (input) {
        let label = input.nextElementSibling,
          labelVal = label.querySelector(
            ".widget-input__file-button-text"
          ).innerText;

        input.addEventListener("change", function (e) {
          let countFiles = "";
          if (this.files && this.files.length >= 1)
            countFiles = this.files.length;

          if (countFiles) {
            label.querySelector(".widget-input__file-button-text").innerText =
              "Обрано файлів: " + countFiles;
            jQuery("#telegButton").removeAttr("disabled");
            jQuery(".telegOff").css("display", "none");
            jQuery(".telegOn").css("display", "block");
          } else {
            label.querySelector(".widget-input__file-button-text").innerText =
              labelVal;
            if (!document.querySelector("#wg_message").value?.trim()?.length) {
              jQuery("#telegButton").attr("disabled", "disabled");
              jQuery(".telegOn").css("display", "none");
              jQuery(".telegOff").css("display", "block");
            }
          }
        });
      });

      //------ start upload
      jQuery(document).ready(function () {
        jQuery("#msgSent-downloadForm").submit(function (e) {
          if (is_process == 1) {
            return false;
          }

          e.preventDefault();
          is_process = 1;
          try {
            jQuery(".telegOff").show();
            jQuery(".telegOn").hide();
            var formData = new FormData(jQuery(this)[0]);
            document.querySelector(
              ".widget-input__file-button-text"
            ).innerText = "";

            jQuery.ajax({
              url: domainApi + "/api/partner/send_message",
              headers: { "X-Interpreter-Region": "ua" },
              type: "POST",
              data: formData,
              async: false,
              beforeSend: function () {
                jQuery("#telegButton").attr("disabled", true);
                ///------add wait
                jQuery("#chatAns").html("Завантаження ..");
              },
              complete: function () {
                jQuery("#telegButton").attr("disabled", false);
                is_process = 0;
              },
              success: function (response) {
                console.log(response);
                if (response.success) {
                  jQuery("#wg_message").val("");
                  jQuery("#telegButton").attr("disabled", "disabled");
                  jQuery(".telegOn").css("display", "none");
                  jQuery(".telegOff").css("display", "block");
                  jQuery("#chatAns").fadeIn(1000);
                  jQuery("#chatAns").removeClass("MsgError");
                  jQuery("#chatAns").addClass("MsgSucces");
                  jQuery("#chatAns").html("Повідомлення успішно відправлено!");
                  jQuery("#chatAns").fadeOut(1000);
                } else {
                  if (response.message) {
                    jQuery("#chatAns").fadeIn(1000);
                    jQuery("#chatAns").removeClass("MsgSucces");
                    jQuery("#chatAns").addClass("MsgError");
                    jQuery("#chatAns").html(response.message);
                    jQuery("#chatAns").fadeOut(1000);
                  }
                }
                is_process = 0;
              },
              error: function (msg) {
                console.log("Ошибка!: ", msg);
                is_process = 0;
              },
              cache: false,
              contentType: false,
              processData: false,
            });
            jQuery("#widget-input__file").val("");
            e.preventDefault();
            e.stopImmediatePropagation();
          } catch (env) {
            console.log(env);
          }
          return false;
        });
      });
    }

    jQuery("#s_code").ready(function () {
      jQuery("#s_code").keydown(function (event) {
        if (
          event.keyCode == 46 ||
          event.keyCode == 8 ||
          event.keyCode == 9 ||
          event.keyCode == 27 ||
          (event.keyCode >= 35 && event.keyCode <= 39)
        ) {
          return;
        } else {
          if (
            (event.keyCode < 48 || event.keyCode > 57) &&
            (event.keyCode < 96 || event.keyCode > 105)
          ) {
            event.preventDefault();
          }
        }
      });
    });
    Application.BeforeOperator();
    /******** Our main function ********/
  }

  function getSyncScriptParams() {
    var scripts = document.querySelector('script[data-name="widgestCall"]');

    return {
      api_key: scripts.getAttribute("data-key"),
      is_commercial: scripts.getAttribute("data-commercial"),
      attach: scripts.getAttribute("data-attach"),
    };
  }

  function main() {
    jQuery(document).ready(function ($) {
      // We can use jQuery 1.4.2 here
      var css_link = jQuery("<link>", {
        rel: "stylesheet",
        type: "text/css",
        href: "widget/widget.css",
      });
      var css_link2 = jQuery("<link>", {
        rel: "stylesheet",
        type: "text/css",
        href: "widget/widget-2.css",
      });
      var css_link3 = jQuery("<link>", {
        rel: "stylesheet",
        type: "text/css",
        href: "widget/widget-3.css",
      });

      css_link.appendTo("head");
      css_link2.appendTo("head");
      css_link3.appendTo("head");
      if (is_release) {
        var url_load = "/load_tpl.php";
      } else {
        var url_load = "/load_tpl.php";
      }
      jQuery("#translate-widget-container").load(
        domain + domainPath + url_load,
        function () {
          Application.Start();
          eventForm();
          widgestPosition.AplyCss();
        }
      );
    });
  }
})(); // We call our anonymous function immediately
